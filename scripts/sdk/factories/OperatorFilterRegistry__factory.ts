/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OperatorFilterRegistry, OperatorFilterRegistryInterface } from "../OperatorFilterRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "AddressAlreadyFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "filtered",
        type: "address",
      },
    ],
    name: "AddressFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "AddressNotFiltered",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRegistered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "AlreadySubscribed",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotCopyFromSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotFilterEOAs",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "CannotSubscribeToRegistrantWithSubscription",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSubscribeToSelf",
    type: "error",
  },
  {
    inputs: [],
    name: "CannotSubscribeToZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "CannotUpdateWhileSubscribed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashAlreadyFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashFiltered",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "CodeHashNotFiltered",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "NotRegistered",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSubscribed",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyAddressOrOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "CodeHashUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "CodeHashesUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "OperatorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "OperatorsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "registered",
        type: "bool",
      },
    ],
    name: "RegistrationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "subscription",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "subscribed",
        type: "bool",
      },
    ],
    name: "SubscriptionUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "a",
        type: "address",
      },
    ],
    name: "codeHashOf",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrantToCopy",
        type: "address",
      },
    ],
    name: "copyEntriesOf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "filteredCodeHashAt",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "filteredCodeHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "filteredOperatorAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "filteredOperators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
    ],
    name: "isCodeHashFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operatorWithCode",
        type: "address",
      },
    ],
    name: "isCodeHashOfFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isOperatorAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isOperatorFiltered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrantToCopy",
        type: "address",
      },
    ],
    name: "registerAndCopyEntries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    name: "registerAndSubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "newSubscription",
        type: "address",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "subscriberAt",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "subscribers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "subscriptionOf",
    outputs: [
      {
        internalType: "address",
        name: "subscription",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
    ],
    name: "unregister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bool",
        name: "copyExistingEntries",
        type: "bool",
      },
    ],
    name: "unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "codeHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateCodeHash",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "codeHashes",
        type: "bytes32[]",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateCodeHashes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "registrant",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "operators",
        type: "address[]",
      },
      {
        internalType: "bool",
        name: "filtered",
        type: "bool",
      },
    ],
    name: "updateOperators",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612763806100206000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063712fc00b116100c3578063b314d4141161007c578063b314d4141461030e578063bbd652c714610321578063c3c5a5471461033c578063c43088051461036a578063c61711341461037d578063e4aecb541461039057600080fd5b8063712fc00b1461028e5780637d3e3dbe146102a1578063a0af2903146102b4578063a14584c1146102c7578063a2f367ab146102da578063a6529eb5146102ed57600080fd5b80633f1cc5fa116101155780633f1cc5fa146101ff5780634420e4861461021257806355940e51146102255780635745ae28146102385780635eae3173146102585780636af0c3151461027b57600080fd5b8063063298b61461015d5780631e06b4b41461017257806322fa2762146101855780632ec2c246146101ae57806334a0dc10146101c15780633c5030bb146101d4575b600080fd5b61017061016b3660046123d6565b6103a3565b005b61017061018036600461243d565b61069d565b610198610193366004612476565b610869565b6040516101a59190612493565b60405180910390f35b6101706101bc366004612476565b6108d7565b6101706101cf3660046124d7565b610a88565b6101e76101e2366004612476565b610c3f565b6040516001600160a01b0390911681526020016101a5565b6101e761020d36600461250c565b610ca5565b610170610220366004612476565b610d1f565b6101e761023336600461250c565b610e5f565b61024b610246366004612476565b610e81565b6040516101a59190612538565b61026b61026636600461243d565b610ea5565b60405190151581526020016101a5565b61026b61028936600461250c565b610f25565b61017061029c366004612579565b610f8d565b6101706102af36600461243d565b6111d6565b6101706102c236600461243d565b611420565b6101706102d53660046123d6565b6115dd565b6101706102e83660046125b7565b611874565b6103006102fb36600461250c565b611a97565b6040519081526020016101a5565b61017061031c36600461243d565b611aff565b61030061032f366004612476565b6001600160a01b03163f90565b61026b61034a366004612476565b6001600160a01b0390811660009081526002602052604090205416151590565b61024b610378366004612476565b611df8565b61026b61038b36600461243d565b611e5f565b61026b61039e36600461243d565b611f3a565b83336001600160a01b0382161461049757806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561040e575060408051601f3d908101601f1916820190925261040b918101906125f5565b60015b61046c573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b606091505b508051600003610464576040516302cb050560e61b815260040160405180910390fd5b805181602001fd5b336001600160a01b0382161461049557604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380861660009081526002602052604090205416806104e05760405163bfc6c33760e01b81526001600160a01b03871660048201526024015b60405180910390fd5b856001600160a01b0316816001600160a01b03161461051d576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b038616600090815260016020526040902084846105ab5760005b818110156105a557600088888381811061055a5761055a612612565b90506020020135905060006105788286611fa290919063ffffffff16565b90508061059b576040516308f0e61560e31b8152600481018390526024016104d7565b505060010161053e565b5061064d565b60005b8181101561064b5760008888838181106105ca576105ca612612565b9050602002013590507fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470810361061357604051631eaebd5b60e31b815260040160405180910390fd5b600061061f8583611fae565b90508061064157604051620c35f560e91b8152600481018390526024016104d7565b50506001016105ae565b505b841515886001600160a01b03167f34e9f70c5a16a4df2a396cf0cbc4735eb3c7fb6ae40aaa0b34be7720121d1b96898960405161068b929190612628565b60405180910390a35050505050505050565b81336001600160a01b0382161461076157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610708575060408051601f3d908101601f19168201909252610705918101906125f5565b60015b610736573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461075f57604051631f9ebdff60e31b815260040160405180910390fd5b505b816001600160a01b0316836001600160a01b0316036107935760405163035956d760e31b815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806107d75760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b836001600160a01b0316816001600160a01b031614610814576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b0380841660009081526002602052604090205416806108585760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b6108628585611fba565b5050505050565b6001600160a01b03808216600081815260026020526040902054606092169081146108b6576001600160a01b03811660009081526001602052604090206108af90612113565b9392505050565b6001600160a01b03831660009081526001602052604090206108af90612113565b80336001600160a01b0382161461099b57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610942575060408051601f3d908101601f1916820190925261093f918101906125f5565b60015b610970573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461099957604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380831660009081526002602052604090205416806109df5760405163bfc6c33760e01b81526001600160a01b03841660048201526024016104d7565b826001600160a01b0316816001600160a01b031614610a45576001600160a01b0381166000908152600360205260409020610a1a9084612120565b506040516000906001600160a01b03808416919086169060008051602061270e833981519152908490a45b6001600160a01b03831660008181526002602052604080822080546001600160a01b0319169055519091906000805160206126ee833981519152908390a3505050565b81336001600160a01b03821614610b4c57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610af3575060408051601f3d908101601f19168201909252610af0918101906125f5565b60015b610b21573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b03821614610b4a57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038084166000908152600260205260409020541680610b905760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b836001600160a01b0316816001600160a01b031603610bc25760405163046fcd8560e31b815260040160405180910390fd5b6001600160a01b0381166000908152600360205260409020610be49085612120565b506001600160a01b0380851660008181526002602052604080822080546001600160a01b031916841790555190928416919060008051602061270e833981519152908490a48215610c3957610c398482611fba565b50505050565b6001600160a01b038082166000908152600260205260409020541680610c835760405163bfc6c33760e01b81526001600160a01b03831660048201526024016104d7565b816001600160a01b0316816001600160a01b031603610ca0575060005b919050565b6001600160a01b03808316600081815260026020526040812054909216908114610cf3576001600160a01b0381166000908152602081905260409020610ceb9084612135565b915050610d19565b6001600160a01b0384166000908152602081905260409020610d159084612135565b9150505b92915050565b80336001600160a01b03821614610de357806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610d8a575060408051601f3d908101601f19168201909252610d87918101906125f5565b60015b610db8573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b03821614610de157604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038281166000908152600260205260409020541615610e1c57604051630ea075bf60e21b815260040160405180910390fd5b6001600160a01b03821660008181526002602052604080822080546001600160a01b0319168417905551600192916000805160206126ee83398151915291a35050565b6001600160a01b03821660009081526003602052604081206108af9083612135565b6001600160a01b0381166000908152600360205260409020606090610d1990612113565b6001600160a01b0382811660008181526002602052604081205490928085163f929116908114610efa576001600160a01b0381166000908152600160205260409020610ef19083612141565b92505050610d19565b6001600160a01b0385166000908152600160205260409020610f1c9083612141565b95945050505050565b6001600160a01b03808316600081815260026020526040812054909216908114610f6b576001600160a01b0381166000908152600160205260409020610ceb9084612141565b6001600160a01b0384166000908152600160205260409020610d159084612141565b82336001600160a01b0382161461105157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ff8575060408051601f3d908101601f19168201909252610ff5918101906125f5565b60015b611026573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461104f57604051631f9ebdff60e31b815260040160405180910390fd5b505b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470830361109157604051631eaebd5b60e31b815260040160405180910390fd5b6001600160a01b0380851660009081526002602052604090205416806110d55760405163bfc6c33760e01b81526001600160a01b03861660048201526024016104d7565b846001600160a01b0316816001600160a01b031614611112576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b03851660009081526001602052604090208361116457600061113b8287611fa2565b90508061115e576040516308f0e61560e31b8152600481018790526024016104d7565b50611194565b60006111708287611fae565b90508061119257604051620c35f560e91b8152600481018790526024016104d7565b505b83151585876001600160a01b03167fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d60405160405180910390a4505050505050565b81336001600160a01b0382161461129a57806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611241575060408051601f3d908101601f1916820190925261123e918101906125f5565b60015b61126f573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461129857604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b038084166000908152600260205260409020541680156112d457604051630ea075bf60e21b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316036113065760405163347f118f60e01b815260040160405180910390fd5b6001600160a01b03808416600090815260026020526040902054168061134a5760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b836001600160a01b0316816001600160a01b03161461138757604051631da3952760e21b81526001600160a01b03851660048201526024016104d7565b6001600160a01b03858116600090815260026020908152604080832080546001600160a01b031916948916948517905592825260039052206113c99086612159565b506040516001906001600160a01b038716906000805160206126ee83398151915290600090a36040516001906001600160a01b03808716919088169060008051602061270e83398151915290600090a45050505050565b81336001600160a01b038216146114e457806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561148b575060408051601f3d908101601f19168201909252611488918101906125f5565b60015b6114b9573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b038216146114e257604051631f9ebdff60e31b815260040160405180910390fd5b505b826001600160a01b0316826001600160a01b0316036115165760405163035956d760e31b815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416801561155057604051630ea075bf60e21b815260040160405180910390fd5b6001600160a01b0380841660009081526002602052604090205416806115945760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b6001600160a01b03851660008181526002602052604080822080546001600160a01b0319168417905551600192916000805160206126ee83398151915291a36108628585611fba565b83336001600160a01b038216146116a157806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611648575060408051601f3d908101601f19168201909252611645918101906125f5565b60015b611676573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461169f57604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b0380861660009081526002602052604090205416806116e55760405163bfc6c33760e01b81526001600160a01b03871660048201526024016104d7565b856001600160a01b0316816001600160a01b031614611722576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b038616600090815260208190526040902084846117bd5760005b818110156117b757600088888381811061175f5761175f612612565b90506020020160208101906117749190612476565b905060006117828583612120565b9050806117ad576040516322a92e0760e11b81526001600160a01b03831660048201526024016104d7565b5050600101611743565b50611836565b60005b818110156118345760008888838181106117dc576117dc612612565b90506020020160208101906117f19190612476565b905060006117ff8583612159565b90508061182a576040516302ed108d60e21b81526001600160a01b03831660048201526024016104d7565b50506001016117c0565b505b841515886001600160a01b03167f02b85afdacb82d5512c6f05566b3018677ffcbd7e5f75e498bc64081131cbd6c898960405161068b929190612664565b82336001600160a01b0382161461193857806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156118df575060408051601f3d908101601f191682019092526118dc918101906125f5565b60015b61190d573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b0382161461193657604051631f9ebdff60e31b815260040160405180910390fd5b505b6001600160a01b03808516600090815260026020526040902054168061197c5760405163bfc6c33760e01b81526001600160a01b03861660048201526024016104d7565b846001600160a01b0316816001600160a01b0316146119b9576040516304af4d6960e01b81526001600160a01b03821660048201526024016104d7565b6001600160a01b038516600090815260208190526040902083611a135760006119e28287612120565b905080611a0d576040516322a92e0760e11b81526001600160a01b03871660048201526024016104d7565b50611a4c565b6000611a1f8287612159565b905080611a4a576040516302ed108d60e21b81526001600160a01b03871660048201526024016104d7565b505b831515856001600160a01b0316876001600160a01b03167f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a60405160405180910390a4505050505050565b6001600160a01b03808316600081815260026020526040812054909216908114611add576001600160a01b0381166000908152600160205260409020610ceb9084612135565b6001600160a01b0384166000908152600160205260409020610d159084612135565b81336001600160a01b03821614611bc357806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611b6a575060408051601f3d908101601f19168201909252611b67918101906125f5565b60015b611b98573d80801561043c576040519150601f19603f3d011682016040523d82523d6000602084013e610441565b336001600160a01b03821614611bc157604051631f9ebdff60e31b815260040160405180910390fd5b505b816001600160a01b0316836001600160a01b031603611bf55760405163347f118f60e01b815260040160405180910390fd5b6001600160a01b038216611c1c5760405163b05574d360e01b815260040160405180910390fd5b6001600160a01b038084166000908152600260205260409020541680611c605760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b826001600160a01b0316816001600160a01b031603611c9d576040516373a4164960e01b81526001600160a01b03841660048201526024016104d7565b6001600160a01b038084166000908152600260205260409020541680611ce15760405163bfc6c33760e01b81526001600160a01b03851660048201526024016104d7565b836001600160a01b0316816001600160a01b031614611d1e57604051631da3952760e21b81526001600160a01b03851660048201526024016104d7565b846001600160a01b0316826001600160a01b031614611d84576001600160a01b0382166000908152600360205260409020611d599086612120565b506040516000906001600160a01b03808516919088169060008051602061270e833981519152908490a45b6001600160a01b03858116600090815260026020908152604080832080546001600160a01b03191694891694851790559282526003905220611dc69086612159565b506040516001906001600160a01b03808716919088169060008051602061270e83398151915290600090a45050505050565b6001600160a01b0380821660008181526002602052604090205460609216908114611e3e576001600160a01b03811660009081526020819052604090206108af90612113565b6001600160a01b03831660009081526020819052604090206108af90612113565b6001600160a01b038083166000908152600260205260408120549091168015611f30576001600160a01b0381166000908152602081815260408083206001909252909120611ead828661216e565b15611ed65760405163a8cf495d60e01b81526001600160a01b03861660048201526024016104d7565b6001600160a01b0385163b15611f2d576001600160a01b0385163f611efb8282612141565b15611f2b57604051635f3853a960e01b81526001600160a01b0387166004820152602481018290526044016104d7565b505b50505b5060019392505050565b6001600160a01b03808316600081815260026020526040812054909216908114611f80576001600160a01b0381166000908152602081905260409020610ceb908461216e565b6001600160a01b0384166000908152602081905260409020610d15908461216e565b60006108af8383612190565b60006108af8383612283565b6001600160a01b038116600090815260208181526040808320600190925282209091611fe5836122d2565b90506000611ff2836122d2565b905060005b8281101561208057600061200b8683612135565b6001600160a01b0389166000908152602081905260408120919250906120319083612159565b90508015612076576040516001906001600160a01b0380851691908c16907f2738289d9deecdc30eb8ffc42876633caecca1ffa166e4efa89f408e17373a1a90600090a45b5050600101611ff7565b5060005b8181101561210a5760006120988583612135565b6001600160a01b0389166000908152600160205260408120919250906120be9083611fae565b905080156121005760405160019083906001600160a01b038c16907fb8036058bafea884aabc446ca15619fd86f5464a4ad96f64164ad6f77444354d90600090a45b5050600101612084565b50505050505050565b606060006108af836122dc565b60006108af836001600160a01b038416612190565b60006108af8383612338565b600081815260018301602052604081205415156108af565b60006108af836001600160a01b038416612283565b6001600160a01b038116600090815260018301602052604081205415156108af565b600081815260018301602052604081205480156122795760006121b46001836126b2565b85549091506000906121c8906001906126b2565b905081811461222d5760008660000182815481106121e8576121e8612612565b906000526020600020015490508087600001848154811061220b5761220b612612565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061223e5761223e6126d7565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610d19565b6000915050610d19565b60008181526001830160205260408120546122ca57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610d19565b506000610d19565b6000610d19825490565b60608160000180548060200260200160405190810160405280929190818152602001828054801561232c57602002820191906000526020600020905b815481526020019060010190808311612318575b50505050509050919050565b600082600001828154811061234f5761234f612612565b9060005260206000200154905092915050565b6001600160a01b038116811461237757600080fd5b50565b60008083601f84011261238c57600080fd5b50813567ffffffffffffffff8111156123a457600080fd5b6020830191508360208260051b85010111156123bf57600080fd5b9250929050565b80358015158114610ca057600080fd5b600080600080606085870312156123ec57600080fd5b84356123f781612362565b9350602085013567ffffffffffffffff81111561241357600080fd5b61241f8782880161237a565b90945092506124329050604086016123c6565b905092959194509250565b6000806040838503121561245057600080fd5b823561245b81612362565b9150602083013561246b81612362565b809150509250929050565b60006020828403121561248857600080fd5b81356108af81612362565b6020808252825182820181905260009190848201906040850190845b818110156124cb578351835292840192918401916001016124af565b50909695505050505050565b600080604083850312156124ea57600080fd5b82356124f581612362565b9150612503602084016123c6565b90509250929050565b6000806040838503121561251f57600080fd5b823561252a81612362565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156124cb5783516001600160a01b031683529284019291840191600101612554565b60008060006060848603121561258e57600080fd5b833561259981612362565b9250602084013591506125ae604085016123c6565b90509250925092565b6000806000606084860312156125cc57600080fd5b83356125d781612362565b925060208401356125e781612362565b91506125ae604085016123c6565b60006020828403121561260757600080fd5b81516108af81612362565b634e487b7160e01b600052603260045260246000fd5b6020808252810182905260006001600160fb1b0383111561264857600080fd5b8260051b80856040850137600092016040019182525092915050565b60208082528181018390526000908460408401835b868110156126a757823561268c81612362565b6001600160a01b031682529183019190830190600101612679565b509695505050505050565b6000828210156126d257634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603160045260246000fdfe86d03f430c7616021073d7a71766f632f1ce19f289aa989534d9f4732253eb590038c54977604f1a5c0a3604cbbecd0153c81e3131799ead95755e8bb5d5b9e8a2646970667358221220e1aa7009ebde75a810805f1687159ea2d27a56acf621f64a6050f74f9463773764736f6c634300080d0033";

export class OperatorFilterRegistry__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<OperatorFilterRegistry> {
    return super.deploy(overrides || {}) as Promise<OperatorFilterRegistry>;
  }
  getDeployTransaction(overrides?: Overrides & { from?: string | Promise<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OperatorFilterRegistry {
    return super.attach(address) as OperatorFilterRegistry;
  }
  connect(signer: Signer): OperatorFilterRegistry__factory {
    return super.connect(signer) as OperatorFilterRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OperatorFilterRegistryInterface {
    return new utils.Interface(_abi) as OperatorFilterRegistryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OperatorFilterRegistry {
    return new Contract(address, _abi, signerOrProvider) as OperatorFilterRegistry;
  }
}
