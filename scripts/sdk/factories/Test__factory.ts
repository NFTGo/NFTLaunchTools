/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, BigNumberish, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Test, TestInterface } from "../Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseUri",
        type: "string",
      },
      {
        internalType: "uint96",
        name: "_royaltyAmount",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBatchMint",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "SaleInactive",
    type: "error",
  },
  {
    inputs: [],
    name: "SoldOut",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressMintBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64[]",
        name: "qtys",
        type: "uint64[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "freeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxPerWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "qty",
        type: "uint256",
      },
    ],
    name: "presale",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleMaxPerTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleMaxPerWallet",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presalePrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "presaleSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleState",
    outputs: [
      {
        internalType: "enum Test.SaleState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "setPerTransactionMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "setPerWalletMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "setPresalePerTransactionMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_val",
        type: "uint256",
      },
    ],
    name: "setPresalePerWalletMax",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPresalePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "feeBasisPoints",
        type: "uint96",
      },
    ],
    name: "setRoyaltyInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_state",
        type: "uint8",
      },
    ],
    name: "setSaleState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawPercentages",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x66b1a2bc2ec50000600b819055600c55600a600d819055600e556005600f819055601055606460805261271060a0526011805460ff19169055610120604052731174a30b44b0ce60af8aa35f1daa907b8360036560c0908152734b865b674e7a2258569f9275a48d0cb18e02158860e05273985afca097414e5510c2c4faebdb287e4f237a1b610100526200009990601490600362000431565b506040805160608101825260308152602f6020820152600591810191909152620000c89060159060036200049b565b50348015620000d657600080fd5b506040516200302838038062003028833981016040819052620000f9916200063f565b733cc6cdda760b79bafa08df41ecfa224f810dceb66001858581600290805190602001906200012a929190620004de565b50805162000140906003906020840190620004de565b50506001600055506200015333620002da565b6daaeb6d7670e522a718067333cd4e3b1562000298578015620001e657604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b158015620001c757600080fd5b505af1158015620001dc573d6000803e3d6000fd5b5050505062000298565b6001600160a01b03821615620002375760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af290390604401620001ac565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b1580156200027e57600080fd5b505af115801562000293573d6000803e3d6000fd5b505050505b50508151620002af906012906020850190620004de565b50620002d0734b865b674e7a2258569f9275a48d0cb18e021588826200032c565b505050506200072e565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6127106001600160601b0382161115620003a05760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b038216620003f85760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c696420726563656976657200000000000000604482015260640162000397565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b82805482825590600052602060002090810192821562000489579160200282015b828111156200048957825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000452565b50620004979291506200055b565b5090565b82805482825590600052602060002090810192821562000489579160200282015b8281111562000489578251829060ff16905591602001919060010190620004bc565b828054620004ec90620006f2565b90600052602060002090601f01602090048101928262000510576000855562000489565b82601f106200052b57805160ff191683800117855562000489565b8280016001018555821562000489579182015b82811115620004895782518255916020019190600101906200053e565b5b808211156200049757600081556001016200055c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200059a57600080fd5b81516001600160401b0380821115620005b757620005b762000572565b604051601f8301601f19908116603f01168101908282118183101715620005e257620005e262000572565b81604052838152602092508683858801011115620005ff57600080fd5b600091505b8382101562000623578582018301518183018401529082019062000604565b83821115620006355760008385830101525b9695505050505050565b600080600080608085870312156200065657600080fd5b84516001600160401b03808211156200066e57600080fd5b6200067c8883890162000588565b955060208701519150808211156200069357600080fd5b620006a18883890162000588565b94506040870151915080821115620006b857600080fd5b50620006c78782880162000588565b606087015190935090506001600160601b0381168114620006e757600080fd5b939692955090935050565b600181811c908216806200070757607f821691505b6020821081036200072857634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a0516128b8620007706000396000818161030301528181610c0201528181610f3101526110de0152600081816106ff015261156c01526128b86000f3fe6080604052600436106102715760003560e01c806355f804b31161014f578063a0712d68116100c1578063cfc86f7b1161007a578063cfc86f7b14610781578063d86bed9b14610796578063e341f5ca146107b6578063e6ab1434146107d6578063e985e9c5146107e9578063f2fde38b1461083257600080fd5b8063a0712d68146106ba578063a22cb465146106cd578063b3a196e9146106ed578063b88d4fde14610721578063bd3b14d314610741578063c87b56dd1461076157600080fd5b806370a082311161011357806370a082311461061c578063715018a61461063c5780638da5cb5b1461065157806391b7f5ed1461066f57806395d89b411461068f578063a035b1fe146106a457600080fd5b806355f804b3146105755780635a67de0714610595578063603f4d52146105b55780636352211e146105dc5780636752656b146105fc57600080fd5b80632a55205a116101e85780633ccfd60b116101ac5780633ccfd60b146104de57806342842e0e146104f357806344bb827914610513578063453c2310146105335780634b980d671461054957806350cf22c11461055f57600080fd5b80632a55205a146104125780633406c7261461045157806334861c751461047e5780633549345e1461049e57806339117668146104be57600080fd5b8063081812fc1161023a578063081812fc14610347578063095ea7b31461037f5780630d0ee1701461039f57806312c23bd8146103bf57806318160ddd146103d557806323b872dd146103f257600080fd5b80620e7fa81461027657806301ffc9a71461029f57806302fa7c47146102cf578063047fc9aa146102f157806306fdde0314610325575b600080fd5b34801561028257600080fd5b5061028c600c5481565b6040519081526020015b60405180910390f35b3480156102ab57600080fd5b506102bf6102ba366004612217565b610852565b6040519015158152602001610296565b3480156102db57600080fd5b506102ef6102ea366004612250565b610863565b005b3480156102fd57600080fd5b5061028c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561033157600080fd5b5061033a610879565b60405161029691906122eb565b34801561035357600080fd5b506103676103623660046122fe565b61090b565b6040516001600160a01b039091168152602001610296565b34801561038b57600080fd5b506102ef61039a366004612317565b61094f565b3480156103ab57600080fd5b506102ef6103ba3660046122fe565b6109dc565b3480156103cb57600080fd5b5061028c600f5481565b3480156103e157600080fd5b50600154600054036000190161028c565b3480156103fe57600080fd5b506102ef61040d366004612341565b6109e9565b34801561041e57600080fd5b5061043261042d36600461237d565b610b4a565b604080516001600160a01b039093168352602083019190915201610296565b34801561045d57600080fd5b5061028c61046c36600461239f565b60136020526000908152604090205481565b34801561048a57600080fd5b506102ef6104993660046123ba565b610bf8565b3480156104aa57600080fd5b506102ef6104b93660046122fe565b610c62565b3480156104ca57600080fd5b506102ef6104d93660046122fe565b610c6f565b3480156104ea57600080fd5b506102ef610c7c565b3480156104ff57600080fd5b506102ef61050e366004612341565b610d12565b34801561051f57600080fd5b5061036761052e3660046122fe565b610e63565b34801561053f57600080fd5b5061028c600d5481565b34801561055557600080fd5b5061028c600e5481565b34801561056b57600080fd5b5061028c60105481565b34801561058157600080fd5b506102ef610590366004612471565b610e8d565b3480156105a157600080fd5b506102ef6105b03660046124b9565b610ea8565b3480156105c157600080fd5b506011546105cf9060ff1681565b60405161029691906124f2565b3480156105e857600080fd5b506103676105f73660046122fe565b610ee9565b34801561060857600080fd5b506102ef61061736600461255e565b610efb565b34801561062857600080fd5b5061028c61063736600461239f565b611027565b34801561064857600080fd5b506102ef611075565b34801561065d57600080fd5b506008546001600160a01b0316610367565b34801561067b57600080fd5b506102ef61068a3660046122fe565b611089565b34801561069b57600080fd5b5061033a611096565b3480156106b057600080fd5b5061028c600b5481565b6102ef6106c83660046122fe565b6110a5565b3480156106d957600080fd5b506102ef6106e83660046125d7565b6111f2565b3480156106f957600080fd5b5061028c7f000000000000000000000000000000000000000000000000000000000000000081565b34801561072d57600080fd5b506102ef61073c366004612603565b611287565b34801561074d57600080fd5b506102ef61075c3660046122fe565b6113e6565b34801561076d57600080fd5b5061033a61077c3660046122fe565b6113f3565b34801561078d57600080fd5b5061033a611477565b3480156107a257600080fd5b5061028c6107b13660046122fe565b611505565b3480156107c257600080fd5b506102ef6107d13660046122fe565b611526565b6102ef6107e43660046122fe565b611533565b3480156107f557600080fd5b506102bf61080436600461267e565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561083e57600080fd5b506102ef61084d36600461239f565b61164e565b600061085d826116c4565b92915050565b61086b6116e9565b6108758282611743565b5050565b606060028054610888906126a8565b80601f01602080910402602001604051908101604052809291908181526020018280546108b4906126a8565b80156109015780601f106108d657610100808354040283529160200191610901565b820191906000526020600020905b8154815290600101906020018083116108e457829003601f168201915b5050505050905090565b600061091682611840565b610933576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061095a82610ee9565b9050806001600160a01b0316836001600160a01b03160361098e5760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216148015906109ae57506109ac8133610804565b155b156109cc576040516367d9dca160e11b815260040160405180910390fd5b6109d7838383611879565b505050565b6109e46116e9565b601055565b826daaeb6d7670e522a718067333cd4e3b15610b3957336001600160a01b03821603610a1f57610a1a8484846118d5565b610b44565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610a6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9291906126e2565b8015610b155750604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610af1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1591906126e2565b610b3957604051633b79c77360e21b81523360048201526024015b60405180910390fd5b610b448484846118d5565b50505050565b6000828152600a602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610bbf5750604080518082019091526009546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610bde906001600160601b031687612715565b610be8919061274a565b91519350909150505b9250929050565b610c006116e9565b7f0000000000000000000000000000000000000000000000000000000000000000610c2c60018461275e565b600054610c399190612775565b1115610c58576040516352df9fe560e01b815260040160405180910390fd5b61087581836118e0565b610c6a6116e9565b600c55565b610c776116e9565b600d55565b610c846116e9565b4760005b60145481101561087557610d0060148281548110610ca857610ca861278d565b9060005260206000200160009054906101000a90046001600160a01b0316606460158481548110610cdb57610cdb61278d565b906000526020600020015485610cf19190612715565b610cfb919061274a565b6118fa565b80610d0a816127a3565b915050610c88565b826daaeb6d7670e522a718067333cd4e3b15610e5857336001600160a01b03821603610d4357610a1a84848461196e565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db691906126e2565b8015610e395750604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610e15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3991906126e2565b610e5857604051633b79c77360e21b8152336004820152602401610b30565b610b4484848461196e565b60148181548110610e7357600080fd5b6000918252602090912001546001600160a01b0316905081565b610e956116e9565b8051610875906012906020840190612168565b610eb06116e9565b8060ff166002811115610ec557610ec56124dc565b6011805460ff19166001836002811115610ee157610ee16124dc565b021790555050565b6000610ef482611989565b5192915050565b610f036116e9565b80838114610f2457604051637e311a6560e11b815260040160405180910390fd5b60005b8181101561101f577f0000000000000000000000000000000000000000000000000000000000000000868683818110610f6257610f6261278d565b9050602002016020810190610f7791906127bc565b6001600160401b03166001600054610f8f919061275e565b610f999190612775565b1115610fb8576040516352df9fe560e01b815260040160405180910390fd5b611017848483818110610fcd57610fcd61278d565b9050602002016020810190610fe2919061239f565b878784818110610ff457610ff461278d565b905060200201602081019061100991906127bc565b6001600160401b03166118e0565b600101610f27565b505050505050565b60006001600160a01b038216611050576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b03166000908152600560205260409020546001600160401b031690565b61107d6116e9565b6110876000611ab0565b565b6110916116e9565b600b55565b606060038054610888906126a8565b600160115460ff1660028111156110be576110be6124dc565b146110dc57604051630fe219dd60e21b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061110860018361275e565b6000546111159190612775565b1115611134576040516352df9fe560e01b815260040160405180910390fd5b80600b546111429190612715565b34146111605760405162bfc92160e01b815260040160405180910390fd5b600d543360009081526013602052604090205461117e908390612775565b111561119d5760405163524f409b60e01b815260040160405180910390fd5b600e548111156111c05760405163524f409b60e01b815260040160405180910390fd5b33600090815260136020526040812080548392906111df908490612775565b909155506111ef905033826118e0565b50565b336001600160a01b0383160361121b5760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b836daaeb6d7670e522a718067333cd4e3b156113d357336001600160a01b038216036112be576112b985858585611b02565b6113df565b604051633185c44d60e21b81523060048201523360248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa15801561130d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133191906126e2565b80156113b45750604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015611390573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b491906126e2565b6113d357604051633b79c77360e21b8152336004820152602401610b30565b6113df85858585611b02565b5050505050565b6113ee6116e9565b600e55565b60606113fe82611840565b61141b57604051630a14c4b560e41b815260040160405180910390fd5b6000611425611b4d565b905080516000036114455760405180602001604052806000815250611470565b8061144f84611b5c565b6040516020016114609291906127e5565b6040516020818303038152906040525b9392505050565b60128054611484906126a8565b80601f01602080910402602001604051908101604052809291908181526020018280546114b0906126a8565b80156114fd5780601f106114d2576101008083540402835291602001916114fd565b820191906000526020600020905b8154815290600101906020018083116114e057829003601f168201915b505050505081565b6015818154811061151557600080fd5b600091825260209091200154905081565b61152e6116e9565b600f55565b600260115460ff16600281111561154c5761154c6124dc565b1461156a57604051630fe219dd60e21b815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061159660018361275e565b6000546115a39190612775565b11156115c2576040516352df9fe560e01b815260040160405180910390fd5b80600c546115d09190612715565b34146115ee5760405162bfc92160e01b815260040160405180910390fd5b600f543360009081526013602052604090205461160c908390612775565b111561162b5760405163524f409b60e01b815260040160405180910390fd5b6010548111156111c05760405163524f409b60e01b815260040160405180910390fd5b6116566116e9565b6001600160a01b0381166116bb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b30565b6111ef81611ab0565b60006001600160e01b0319821663152a902d60e11b148061085d575061085d82611c64565b6008546001600160a01b031633146110875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610b30565b6127106001600160601b03821611156117b15760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608401610b30565b6001600160a01b0382166118075760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401610b30565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600955565b600081600111158015611854575060005482105b801561085d575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6109d7838383611cb4565b610875828260405180602001604052806000815250611e9f565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611947576040519150601f19603f3d011682016040523d82523d6000602084013e61194c565b606091505b50509050806109d757604051631d42c86760e21b815260040160405180910390fd5b6109d783838360405180602001604052806000815250611287565b604080516060810182526000808252602082018190529181019190915281806001111580156119b9575060005481105b15611a9757600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b81046001600160401b031692820192909252600160e01b90910460ff16151591810182905290611a955780516001600160a01b031615611a2c579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b82046001600160401b031693830193909352600160e01b900460ff1615159281019290925215611a90579392505050565b611a2c565b505b604051636f96cda160e11b815260040160405180910390fd5b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611b0d848484611cb4565b6001600160a01b0383163b15158015611b2f5750611b2d84848484611eac565b155b15610b44576040516368d2bf6b60e11b815260040160405180910390fd5b606060128054610888906126a8565b606081600003611b835750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611bad5780611b97816127a3565b9150611ba69050600a8361274a565b9150611b87565b6000816001600160401b03811115611bc757611bc76123e6565b6040519080825280601f01601f191660200182016040528015611bf1576020820181803683370190505b5090505b8415611c5c57611c0660018361275e565b9150611c13600a86612814565b611c1e906030612775565b60f81b818381518110611c3357611c3361278d565b60200101906001600160f81b031916908160001a905350611c55600a8661274a565b9450611bf5565b949350505050565b60006001600160e01b031982166380ac58cd60e01b1480611c9557506001600160e01b03198216635b5e139f60e01b145b8061085d57506301ffc9a760e01b6001600160e01b031983161461085d565b6000611cbf82611989565b9050836001600160a01b031681600001516001600160a01b031614611cf65760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480611d145750611d148533610804565b80611d2f575033611d248461090b565b6001600160a01b0316145b905080611d4f57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416611d7657604051633a954ecd60e21b815260040160405180910390fd5b611d8260008487611879565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff198082166001600160401b0392831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116611e56576000548214611e5657805460208601516001600160401b0316600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46113df565b6109d78383836001611f97565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611ee1903390899088908890600401612828565b6020604051808303816000875af1925050508015611f1c575060408051601f3d908101601f19168201909252611f1991810190612865565b60015b611f7a573d808015611f4a576040519150601f19603f3d011682016040523d82523d6000602084013e611f4f565b606091505b508051600003611f72576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000546001600160a01b038516611fc057604051622e076360e81b815260040160405180910390fd5b83600003611fe15760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038516600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff1981166001600160401b038083168c0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168c01811690920217909155858452600490925290912080546001600160e01b031916909217600160a01b42909216919091021790558080850183801561209257506001600160a01b0387163b15155b1561211a575b60405182906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46120e36000888480600101955088611eac565b612100576040516368d2bf6b60e11b815260040160405180910390fd5b80820361209857826000541461211557600080fd5b61215f565b5b6040516001830192906001600160a01b038916906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a480820361211b575b506000556113df565b828054612174906126a8565b90600052602060002090601f01602090048101928261219657600085556121dc565b82601f106121af57805160ff19168380011785556121dc565b828001600101855582156121dc579182015b828111156121dc5782518255916020019190600101906121c1565b506121e89291506121ec565b5090565b5b808211156121e857600081556001016121ed565b6001600160e01b0319811681146111ef57600080fd5b60006020828403121561222957600080fd5b813561147081612201565b80356001600160a01b038116811461224b57600080fd5b919050565b6000806040838503121561226357600080fd5b61226c83612234565b915060208301356001600160601b038116811461228857600080fd5b809150509250929050565b60005b838110156122ae578181015183820152602001612296565b83811115610b445750506000910152565b600081518084526122d7816020860160208601612293565b601f01601f19169290920160200192915050565b60208152600061147060208301846122bf565b60006020828403121561231057600080fd5b5035919050565b6000806040838503121561232a57600080fd5b61233383612234565b946020939093013593505050565b60008060006060848603121561235657600080fd5b61235f84612234565b925061236d60208501612234565b9150604084013590509250925092565b6000806040838503121561239057600080fd5b50508035926020909101359150565b6000602082840312156123b157600080fd5b61147082612234565b600080604083850312156123cd57600080fd5b823591506123dd60208401612234565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60006001600160401b0380841115612416576124166123e6565b604051601f8501601f19908116603f0116810190828211818310171561243e5761243e6123e6565b8160405280935085815286868601111561245757600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561248357600080fd5b81356001600160401b0381111561249957600080fd5b8201601f810184136124aa57600080fd5b611c5c848235602084016123fc565b6000602082840312156124cb57600080fd5b813560ff8116811461147057600080fd5b634e487b7160e01b600052602160045260246000fd5b602081016003831061251457634e487b7160e01b600052602160045260246000fd5b91905290565b60008083601f84011261252c57600080fd5b5081356001600160401b0381111561254357600080fd5b6020830191508360208260051b8501011115610bf157600080fd5b6000806000806040858703121561257457600080fd5b84356001600160401b038082111561258b57600080fd5b6125978883890161251a565b909650945060208701359150808211156125b057600080fd5b506125bd8782880161251a565b95989497509550505050565b80151581146111ef57600080fd5b600080604083850312156125ea57600080fd5b6125f383612234565b91506020830135612288816125c9565b6000806000806080858703121561261957600080fd5b61262285612234565b935061263060208601612234565b92506040850135915060608501356001600160401b0381111561265257600080fd5b8501601f8101871361266357600080fd5b612672878235602084016123fc565b91505092959194509250565b6000806040838503121561269157600080fd5b61269a83612234565b91506123dd60208401612234565b600181811c908216806126bc57607f821691505b6020821081036126dc57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156126f457600080fd5b8151611470816125c9565b634e487b7160e01b600052601160045260246000fd5b600081600019048311821515161561272f5761272f6126ff565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261275957612759612734565b500490565b600082821015612770576127706126ff565b500390565b60008219821115612788576127886126ff565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600182016127b5576127b56126ff565b5060010190565b6000602082840312156127ce57600080fd5b81356001600160401b038116811461147057600080fd5b600083516127f7818460208801612293565b83519083019061280b818360208801612293565b01949350505050565b60008261282357612823612734565b500690565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061285b908301846122bf565b9695505050505050565b60006020828403121561287757600080fd5b81516114708161220156fea26469706673582212203cb3558b2f9d13a2a9b16877e39c3c075c3036c5325dc33878fdbe4ea5a99c8864736f6c634300080d0033";

export class Test__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _name: string,
    _symbol: string,
    _baseUri: string,
    _royaltyAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Test> {
    return super.deploy(_name, _symbol, _baseUri, _royaltyAmount, overrides || {}) as Promise<Test>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _baseUri: string,
    _royaltyAmount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, _baseUri, _royaltyAmount, overrides || {});
  }
  attach(address: string): Test {
    return super.attach(address) as Test;
  }
  connect(signer: Signer): Test__factory {
    return super.connect(signer) as Test__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestInterface {
    return new utils.Interface(_abi) as TestInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Test {
    return new Contract(address, _abi, signerOrProvider) as Test;
  }
}
